.popup{display:none;position:fixed;z-index:100;left:0;right:0;top:0;bottom:0;overflow:scroll}.popup__content{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);margin:15px}.popup__bg{background:#373737;position:fixed;z-index:-1;left:0;right:0;top:0;bottom:0;opacity:.8}.popup__close-btn{position:absolute;z-index:10;right:20px;top:20px;display:inline-block;font-size:30px;color:#fff;text-shadow:2px 2px 15px #000;cursor:pointer}.popup .slider__btns{color:#fff}.entrance-popup__content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;padding:20px}.entrance-popup__pics{width:1070px;height:600px;border:10px solid #fff}.entrance-popup__pics>li{position:relative;height:100%}.entrance-popup__pics img{min-height:100%;min-width:100%}.entrance-popup .slider__item{display:none;overflow:hidden}.entrance-popup .slider__item.active{display:block}.entrance-popup .slider__btns{margin-top:10px;margin-left:auto}@media (max-width:1200px){.entrance-popup__pics{width:765px;height:500px}}@media (max-width:767px){.entrance-popup__pics{width:598px;height:400px}.entrance-popup .slider__btns{margin:10px auto}}@media (max-width:600px){.entrance-popup__content{padding:0}.entrance-popup__pics{width:320px;height:250px}.popup__content{margin:0}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */