@charset "UTF-8";*{-webkit-box-sizing:border-box;box-sizing:border-box}body{background:#fff;font:600 16px "Inter",sans-serif;color:#101010}a{text-decoration:none;color:inherit}ul{list-style:none;padding:0}body,h1,h2,h3,h4,p,ul{margin:0}button,input,select{-webkit-box-shadow:none;box-shadow:none;border:0;outline:0}button:hover{cursor:pointer}._container{max-width:1290px;margin:0 auto}.text-content,.title{font-size:50px;font-weight:700;line-height:1.3}.text-content{font-size:16px;font-weight:400;color:#373737}.ticker{background:#373737;font-size:30px;font-weight:700;line-height:1.2103333333;text-transform:uppercase;color:#fff;padding:20px 0}.ticker__labels{position:relative;white-space:nowrap}.ticker__label{position:relative;margin-right:20px}.btn,.header__phone-number>span,.logo,.ticker__label{display:inline-block}.logo::before{content:"Логотип";font-size:20px;font-weight:600}.btn{background:#ff574d;font-weight:700;line-height:1.1875;color:#fff;border-radius:10px;padding:15px 28px;-webkit-transition:background-color .3s ease;-o-transition:background-color .3s ease;transition:background-color .3s ease}.btn:hover{background:#d34137}.btn_secondary,.btn_secondary:hover{background:#2b8e53}.header{-webkit-box-shadow:5px 10px 30px 0 rgba(0,0,0,.1019607843);box-shadow:5px 10px 30px 0 rgba(0,0,0,.1019607843)}.header__info-row{background:#f1f1f1;padding:35px 0}.header__info-row>a{display:block}.header__info,.header__nav{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__email,.header__phone-number{font-weight:700;line-height:1.21}.header__email:hover{text-decoration:underline}.header__phone-number>span:not(:last-child){margin-right:10px}.header__nav>li{margin:0 37px}.header__nav>li:first-child{margin-left:0}.header__nav>li:last-child{margin-right:0}.header__nav-link{display:inline-block;padding:20px 0;-webkit-transition:color .2s ease;-o-transition:color .2s ease;transition:color .2s ease}.header__nav-link:hover{color:#2b8e53}.main-block{overflow:hidden}.main-block__content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding-top:90px}.main-block__text{-ms-flex-preferred-size:520px;flex-basis:520px;margin-top:50px}.main-block__text>:not(:last-child){margin-bottom:20px}.main-block__pic{position:relative;padding:90px 0 20px}.main-block__pic img{position:relative;z-index:10;display:block;max-width:100%}.main-block__pic::after{background:#2b8e53;content:"";position:absolute;z-index:1;left:80px;right:-100vw;top:0;bottom:0;border-radius:10px 0 0 0}@media (max-width:1290px){._container{padding-left:10px;padding-right:10px}.header__nav>li{margin:0 15px}}@media (max-width:992px){.header__info,.header__nav{-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.header__info>*{margin:10px 20px}.header__info>:first-child{margin-left:0}.header__info>:last-child{margin-right:0}}@media (max-width:600px){.header__nav{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:10px}.header__nav>li{margin:0}.header__nav-link{padding:10px 0}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */